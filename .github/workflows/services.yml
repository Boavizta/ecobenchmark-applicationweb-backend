on: [push]

jobs:
  common-variables:
    name: generate common variables
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: generate variables
        id: variables
        run: |
          SERVICES=$(for d in $(ls -d ./service/*/); do basename $d; done)
          echo "::set-output name=services::$SERVICES"
          USE_CASE=$(cat ./usecase)
          echo "::set-output name=use_case::$USE_CASE"

    outputs:
      services: ${{ steps.variables.outputs.services }}
      use_case: ${{ steps.variables.outputs.use_case }}

  build-service:
    name: Building each service
    needs:
      - common-variables
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ needs.common-variables.outputs.services }}

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: check that the code has changed
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            workflows:
              - './service/${{ matrix.service }}/**'

      - name: load the name of the usecase in memory
        # if: steps.filter.outputs.workflows == 'true'
        id: usecase
        run: echo ::set-output name=name::$(cat ./usecase)

      - name: check if should push to Docker Hub
        # if: steps.filter.outputs.workflows == 'true'
        id: usecase
        run: echo ::set-output name=name::$(cat ./usecase)

      - name: login to Docker Hub
        uses: docker/login-action@v2
        # if: steps.filter.outputs.workflows == 'true'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build image
        uses: docker/build-push-action@v3
        # if: steps.filter.outputs.workflows == 'true'
        with:
          context: service/${{ matrix.service }}
          push: true
          tags: jdrouet/eco-benchmark:service-${{ matrix.service }}-${{ needs.common-variables.outputs.use_case }}